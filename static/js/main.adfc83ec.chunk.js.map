{"version":3,"sources":["Components/Navbar/index.js","Components/Projects/index.js","Pages/Home.js","App.js","serviceWorker.js","index.js","assets/images/LiveMerch.png","assets/images/missenplace.png","assets/images/TweetTrace.png"],"names":["withStyles","menuButtons","marginLeft","marginRight","props","classes","react_default","a","createElement","AppBar_default","position","Toolbar_default","Typography_default","variant","color","className","Button_default","project_title","textAlign","project_content","marginTop","marginBottom","borderBottom","backgroundColor","projectButtons","margin","_ref","Grid_default","container","spacing","alignContent","xs","item","md","style","borderTopLeftRadius","borderBottomLeftRadius","paddingTop","href","borderTopRightRadius","borderBottomRightRadius","src","TweetTrace","alt","Divider_default","Missenplace","LiveMerch","main_body","intro","personal_container","padding","border","contact_container","Projects","class","App","Components_Navbar","Pages_Home","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.adfc83ec.chunk.js","sourcesContent":["import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\"\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nconst styles = {\n    menuButtons: {\n        marginLeft: \"auto\",\n        marginRight: \"12px\"\n      }\n}\n\nconst Navbar = (props) => {\n\n    const {classes} = props;\n\n    return (\n    <div >\n        <AppBar position=\"static\">\n        <Toolbar>\n            <Typography variant = \"h5\" color=\"inherit\">\n                Daniel Tian\n            </Typography>\n            <div className = {classes.menuButtons}>\n                <Button color=\"inherit\">Projects</Button>\n                <Button color=\"inherit\">About Me</Button>\n                <Button color=\"inherit\">Contact</Button>\n            </div>\n\n        </Toolbar>\n\n    </AppBar>\n    \n    \n    </div>\n    )\n}\n\nexport default withStyles(styles) (Navbar)","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from '@material-ui/core/Button';\nimport Divider from \"@material-ui/core/Divider\"\nimport { withStyles } from \"@material-ui/core\";\nimport LiveMerch from \"../../assets/images/LiveMerch.png\"\nimport Missenplace from \"../../assets/images/missenplace.png\"\nimport TweetTrace from \"../../assets/images/TweetTrace.png\"\n\nconst styles= {\n    project_title : {\n        textAlign: \"center\"\n    },\n    project_content: {\n        marginTop: \"5px\",\n        marginBottom: \"5px\",\n        borderBottom: \"2px white solid\",\n        backgroundColor: \"rgba(255,255,255, 0.9)\",\n        color: \"gray\"\n    },\n    projectButtons: {\n        margin: \"10px\"\n    }\n}\n\nconst Project = ({classes}) => {\n\n    return <Grid container spacing = {24} alignContent=\"center\">\n\n                <Grid xs={12}>\n                        <h2 className={classes.project_title}>Projects</h2>\n                </Grid>\n                    <Grid item md={6} xs={12} className={classes.project_content} alignContent = \"center\" style={{borderTopLeftRadius: \"110px\", borderBottomLeftRadius: \"110px\"}}>\n                    <div style={{paddingTop: \"35%\"}}>           \n                      <h3>Tweet Trace</h3>\n                        <p>TweetTrace helps you manage your online presence. We let users sign in using their Twitter amount, pull their most recent weekly tweets, track likes and retweets, and get a feel for how people are receiving their tweets based on an NLP's analysis of comments.</p>\n                        <p>Technologies used: Node.js, Express.js, React.js, MongoDB, Bootstrap</p>\n\n                        <Button variant=\"contained\"  color=\"primary\" href=\"https://pure-escarpment-67547.herokuapp.com/\" className={classes.projectButtons}>See It in Action</Button>\n                        <Button  variant=\"contained\" color=\"primary\" className={classes.projectButtons}>Code</Button>\n                    </div>\n\n                    </Grid>\n\n                    <Grid item  md={6} xs={12} className = {classes.project_content} style={{borderTopRightRadius: \"110px\", borderBottomRightRadius: \"110px\"}}>\n                        <div style={{paddingTop: \"1%\"}}>       \n                            <img src = {TweetTrace} alt=\"TweetTrace\"/>\n                        </div>\n                    </Grid>     \n                <Divider/>\n\n            <Grid item md= {6} xs={12} className = {classes.project_content} style={{borderTopLeftRadius: \"110px\", borderBottomLeftRadius: \"110px\"}}>\n                <div style={{paddingTop: \"1%\"}}>         \n                    <img src = {Missenplace} alt=\"Missenplace\"/>\n                </div>\n            </Grid>\n            <Grid item md = {6} xs={12} className = {classes.project_content} style={{borderTopRightRadius: \"110px\", borderBottomRightRadius: \"110px\"}} >\n            <div style={{paddingTop: \"15%\"}}>         \n                <h3>Missenplace</h3>\n                    <p>Mise en Place is a web application where users can search up recipes from Edamam API based on dietary restriction or preferences and schedule those recipes for the week. The user can create an account favorite certain recipes they enjoy making or can schedule them on their calendar when they would like to try out the recipe. If the user enjoys making the recipe, they can favorite it without having to search again on the Calendar tab.</p>\n                    <p>Technologies used: Node.js, Express.js, Handlebars.js, MySQL, Bootstrap</p>\n\n                    <Button variant=\"contained\"  className={classes.projectButtons} color=\"primary\" href=\"https://murmuring-brushlands-67751.herokuapp.com/\">See It in Action</Button>\n                    <Button variant=\"contained\"  className={classes.projectButtons} color=\"primary\">Code</Button>\n                </div>\n            </Grid>      \n            <Grid item md = {6} xs={12} className={classes.project_content} style={{borderTopLeftRadius: \"110px\", borderBottomLeftRadius: \"110px\"}}>\n                <div style={{paddingTop: \"10%\"}}>         \n\n                <h3>LiveMerch</h3>\n                <p>LiveMerch is a tool to help users find concerts in their area and provide relevant fan merchandise available for purchase all on one page. Users can search by band, city and state, or by their current location to find concerts and merchandise associated with the bands/artists performing.</p>\n                <p>Technologies used: jQuery, Bootstrap</p>\n                <Button variant=\"contained\"  className={classes.projectButtons} color=\"primary\" href=\"http://tinyurl.com/yxd3m6do\">See It in Action</Button>\n                <Button variant=\"contained\"   className={classes.projectButtons} color=\"primary\">Code</Button>\n                </div>\n            </Grid>\n            <Grid item md = {6} xs={12} className = {classes.project_content} style={{borderTopRightRadius: \"110px\", borderBottomRightRadius: \"110px\"}}>\n                <img src = {LiveMerch} alt=\"LiveMerch\"/>\n\n            </Grid>          \n    </Grid>\n    \n}\n\nexport default withStyles(styles)(Project);","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\"\nimport \"./style.css\"\nimport Project from \"../Components/Projects/index\";\nimport { withStyles } from \"@material-ui/core\";\n\nconst styles = {\n    main_body: {\n        marginLeft: \"10%\",\n        marginRight: \"10%\",\n    },\n    intro: {\n        marginTop: \"50px\",\n        marginBottom: \"10px\",\n        backgroundColor: \"rgba(255,255,255, 0.9)\"\n    },\n\n    personal_container : {\n        marginTop: \"50px\",\n        padding: \"\",\n        border: \"2px black solid\",\n        backgroundColor: \"lightgray\"\n\n    },\n\n    contact_container : {\n        marginTop: \"50px\",\n        border: \"2px black solid\",\n        backgroundColor: \"lightgray\"\n\n    }\n}\n\n\nconst Home = ({classes})=>{\n    \n        return (\n        <div className = {classes.main_body}>\n        <Grid container spacing = {24}>\n            <Grid item xs={12} className={classes.intro}>\n                    <h1>My name is Daniel... What would you like build?</h1>\n                    <p>Aspiring software engineer with a background in mechanical engineering and minor in computer science. Proficient in programming languages such as Python, Javascript, SQL, and other Web based technologies. Always eager to learn and develop my skills as a backend developer.</p>\n                    <p></p>\n            </Grid>\n            <Project/>          \n            <Grid item xs={12} className={classes.contact_container}>\n                <h1>Contact Info</h1>\n                <ul>\n                    <li><i class=\"fab fa-github\"></i></li>\n                    <li><i class=\"fab fa-github\"></i></li>\n                </ul>\n            </Grid>\n        </Grid>\n\n        </div>\n        )\n \n    }\n\n\nexport default withStyles(styles)(Home);","import React from 'react';\nimport Navbar from \"./Components/Navbar/index\"\nimport Home from \"./Pages/Home\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Navbar/>\n        <Home/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/LiveMerch.0df055b9.png\";","module.exports = __webpack_public_path__ + \"static/media/missenplace.bbbaaf89.png\";","module.exports = __webpack_public_path__ + \"static/media/TweetTrace.7da6d8ea.png\";"],"sourceRoot":""}